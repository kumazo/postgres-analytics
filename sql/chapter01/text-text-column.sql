--
-- テーブルからテキストカラムを取り出す
--


--
-- テーブルの文字列カラムの名前と、ダミー文字列をjsonbにして返す。
-- ダミー文字列のサイズは、varchar(n)ならそのサイズで最大100文字、textは100文字固定。
-- char(n)は対象外。
-- tname  テーブル名
-- fill   充填文字列　デフォルト'DUMMY '
-- tname  テーブルスキーマ名 デフォルト'public'
-- 
create or replace function text_columns_with(
  tname text, fill text = 'DUMMY ', tschema text = 'public')
returns jsonb
as $$
  with
  info as (
      select column_name,
        rpad('', least(character_maximum_length, 100), fill) as val
    from information_schema.columns
    where table_schema = tschema and table_name = tname
      and data_type in (
        -- 固定長のchar(n)はおそらくフリーテキストではなく定義されたコードに
        -- 使われているので、対象から外しておく
        -- 'character',  -- char(n)型 
        'character varying',   -- varchar(n)型
        'text' -- text型
      )
      and column_default is null
      and is_generated = 'NEVER'
  )
  select jsonb_object_agg(column_name, val) from info;
$$ language sql;


-- テストテーブル
create table items01(
  -- serial の代わりにgenerated by defaultを使っている
  id int generated by default as identity,
  code char(4) not null,
  name varchar(16) not null,
  category varchar(40),
  description text,
  val int,
  created timestamp
);

select * from jsonb_pretty(text_columns_with('items01','hoge')) as dummy;
                                                           dummy                                                           
---------------------------------------------------------------------------------------------------------------------------
 {                                                                                                                        +
     "name": "hogehogehogehoge",                                                                                          +
     "category": "hogehogehogehogehogehogehogehogehogehoge",                                                              +
     "description": "hogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehogehoge"+
 }
(1 row)



-- テキストカラムに
with
defaults as (
  -- 初期値
  values (0, '0000', NULL, NULL, NULL, 100, now())
),
dummy as(
  -- テキストカラムのダミーデータ
  select * from text_columns_with('items01','X') as txt
)
insert into items01 overriding USER value select init.* 
from 
  defaults, dummy,
  jsonb_populate_record(defaults::items01, dummy.txt) as init,
  generate_series(1, 1000) as gs(n)
;

/*
  id  | code |       name       |                 category                 |                                             description                          
                    | val |          created           
------+------+------------------+------------------------------------------+----------------------------------------------------------------------------------
--------------------+-----+----------------------------
    1 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
    2 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
    3 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
    4 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
    5 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
    6 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
    7 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
    8 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
    9 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
   10 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
   11 | 0000 | XXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX | XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXX | 100 | 2019-10-06 12:25:03.579584
:
:
*/


-- 後始末

drop table if exists items01;
drop function if exists text_columns_with;